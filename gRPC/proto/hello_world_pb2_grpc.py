# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import hello_world_pb2 as hello__world__pb2


class MyServiceStub(object):
    """A sample service which contains all our rpc.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.MyFunc = channel.unary_unary(
                '/myservice.MyService/MyFunc',
                request_serializer=hello__world__pb2.Request.SerializeToString,
                response_deserializer=hello__world__pb2.StringMessage.FromString,
                )


class MyServiceServicer(object):
    """A sample service which contains all our rpc.
    """

    def MyFunc(self, request, context):
        """The definition of rpc.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MyServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'MyFunc': grpc.unary_unary_rpc_method_handler(
                    servicer.MyFunc,
                    request_deserializer=hello__world__pb2.Request.FromString,
                    response_serializer=hello__world__pb2.StringMessage.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'myservice.MyService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MyService(object):
    """A sample service which contains all our rpc.
    """

    @staticmethod
    def MyFunc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/myservice.MyService/MyFunc',
            hello__world__pb2.Request.SerializeToString,
            hello__world__pb2.StringMessage.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
